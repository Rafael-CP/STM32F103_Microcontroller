;======== EXERCICIO 1A ==========
		EXPORT __main

		AREA M_PROGRAM, CODE, READONLY
__main
		MOV		r0, #5
pk1		NOP
		SUBS	r0,#1
		BNE		pk1		;branch se r0 for diferente de 0
		B		__main
		END


;======== EXERCICIO 1A EXTRA ==========
		EXPORT __main

		AREA M_PROGRAM, CODE, READONLY
__main
		MOV		r0, #&d5
		MOV		r1, #&df
pk1		NOP
		ADDS	r0, #1
		CMP		r0,r1
		BNE		pk1		;se r0 for diferente de r1, voltar para pk1
		B		__main
		END
		
;======== EXERCICIO 1B ==========
		EXPORT __main
			
		AREA 	M_DADOS, DATA, READWRITE
vr1		space	1
	
		AREA 	M_PROGRAM, CODE, READONLY
__main
		LDR		r0,=vr1
		LDRSB		r1,[r0]
		MOVS		r2,r1
		BPL		pk1		; EXECUTA BRANCH SE VALOR DO MOVS FOR POSITIVO (VERIFICA FLAG N)
pk2		MVN		r2,r1
		ADD		r2, #1
		STRB		r2,[r0]
		B		__main
pk1		MVN		r2,r1	; COMPLEMENTO DE 1
		STRB		r2,[r0]	; ARMAZENA VALOR
		B		__main
		END
						
;========EXERCICIO 1B EXTRA ==========
		EXPORT __main
			
		AREA 	M_DADOS, DATA, READWRITE
vr1		space	1
	
		AREA 	M_PROGRAM, CODE, READONLY
__main
		LDR		r0,=vr1
		LDRSB		r1,[r0]
		MOVS		r2,r1
		BEQ		pk1		; EXECUTA SE VALOR EM MOVS FOR IGUAL A 0 (FLAG Z)
		BMI		pk2		; EXECUTA BRANCH SE VALOR DO MOVS FOR NEGATIVO (VERIFICA FLAG N)
		
pk2		MVN		r2,r1	
		ADD		r2, #1	; COMPLEMENTO DE 2 É FEITO COM COMPLEMENTO DE 1 E SOMANDO 1
		STRB		r2,[r0]
		B		__main
		
pk1		MVN		r2,r1	; COMPLEMENTO DE 1
		STRB	r2,[r0]	; ARMAZENA VALOR
		B		__main
		END
			