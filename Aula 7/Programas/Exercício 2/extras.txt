;---Ex-2a - divide unsigned bin 32/32 bits
		export	__main
;---directive area-programa
		area 	m_prog, code, readonly
__main
		movw 	r0,#65534 ;r0=&fffe
		movt 	r0,#65535 ;r0=&ffff
		movw 	r1,#2
		udiv 	r2,r0,r1 ;r2=r0/r1
pk0 	b 		pk0
		end

;---Ex-2b - divide signed bin 32/32 bits
		export	__main
;---directive area-programa
		area 	m_prog, code, readonly
__main
		movw 	r0,#65534 ;r0=&fffe
		movt	r0,#32767 ;r0=&7fff
		mov 	r1,#2
		sdiv 	r2,r0,r1 ;r2=r0/r1=&3fffffff
		movw 	r3,#&0002 ;
		movt 	r3,#&8000 ;
		sdiv 	r4,r3,r1 ;r4=r3/r1=&c0000001
		mvn 	r5,r1 ;r5=1's de r1
		add 	r5,#1 ;r5=2's de r1
		sdiv 	r6,r3,r5 ;r6=r3/r5=&3fffffff
pk0 	b 		pk0
		end
			
;---Ex_2c - div. b/b (32/32 bits)
		export 	__main
;---diret. equate
nb 		equ 	8
;---diretiva area-dados1
		area	d_1, data, readwrite
vr 		space 	nb
vs 		space 	nb
;---diretiva area-dados2 -sram
		area 	d_2, data, readwrite
vrs 	space 	nb
;---directive area-programa
		area	m_prog, code, readonly
__main
pk0 	ldr 	r0,=vr 		;r0=&vr
		ldr 	r1,=vrs 	;r1=&vrs
		ldr 	r2,=vr+nb 	;r2=&vs(contr.)
pk1 	ldrb 	r4,[r0,#nb]	;r4=vs(i)(dvs)
		ldrb 	r3,[r0],#1	;r3=vr(i)(ddo)
		udiv	r5,r3,r4 	;r5=r3/r4
		strb 	r5,[r1],#1
		cmp 	r0,r2 		;ro=r2?(r0-r2)
		bne 	pk1
		b 		pk0
		end

;---Ex_2d - div. vr/vs pos incr
		export 	__main
tam		equ		16
;---diretiva area-dados -sram
		area 	d_2, data, readwrite
vr 		space	tam
vs		space	tam
vrs		space	tam
;---directive area-programa
		area 	m_prog, code, readonly
__main
pk0 	ldr 	r0,=vr 		;r0=&vr
		ldr 	r1,=vs 		;r1=&vs
		ldr		r2,=vrs		;r2=&vrs
		mov		r3,r0		;contador
		add		r3,#tam	
pk1 	ldrh	r4,[r0],#2
		ldrh	r5,[r1],#2
		udiv 	r6,r4,r5
		strh 	r6,[r2],#2	;pos incremento
		cmp		r0,r3
		bne 	pk1 
		b 		pk0 
		end	

;---Ex_2e - div. vr/vs pos incr
		export 	__main
tam		equ		16
;---diretiva area-dados -sram
		area 	d_2, data, readwrite
vr 		space	tam
vs		space	tam
vrs		space	tam
;---directive area-programa
		area 	m_prog, code, readonly
__main
pk0 	ldr 	r0,=vr 		;r0=&vr
		ldr 	r1,=vs 		;r1=&vs
		ldr		r2,=vrs		;r2=&vrs
		mov		r3,r0		;contador
		add		r3,#tam	
pk1 	ldr		r4,[r0],#4
		ldr		r5,[r1],#4
		udiv 	r6,r4,r5
		str 	r6,[r2],#4	;pos incremento
		cmp		r0,r3
		bne 	pk1 
		b 		pk0 
		end	